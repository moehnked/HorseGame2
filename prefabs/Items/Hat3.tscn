[gd_scene load_steps=25 format=2]

[ext_resource path="res://prefabs/Interactables/InteractableNoPreset.tscn" type="PackedScene" id=1]
[ext_resource path="res://Scripts/Items/Hat.gd" type="Script" id=2]
[ext_resource path="res://models/objects/hats/hat3.dae" type="PackedScene" id=3]
[ext_resource path="res://prefabs/UI/ItemContext_Description.tscn" type="PackedScene" id=4]
[ext_resource path="res://models/letters/letter_H.obj" type="ArrayMesh" id=5]

[sub_resource type="SphereShape" id=1]

[sub_resource type="BoxShape" id=2]
extents = Vector3( 0.637604, 0.365934, 0.675792 )

[sub_resource type="Shader" id=3]
code = "shader_type spatial;
render_mode cull_front, unshaded, ambient_light_disabled;

uniform float outline_thickness : hint_range(0.0, 1.0, 0.001) = 0.005;
uniform vec4 outline_color : hint_color = vec4(0.0, 0.0, 0.0, 1.0);

void vertex()
{
	VERTEX = (NORMAL * outline_thickness) + VERTEX;
}

void fragment()
{
	ALBEDO = outline_color.rgb;
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/outline_thickness = 0.016
shader_param/outline_color = Color( 0, 0, 0, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=5]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=6]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=7]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=9]
function = 0

[sub_resource type="VisualShaderNodeVectorOp" id=10]

[sub_resource type="VisualShaderNodeScalarOp" id=11]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorDecompose" id=15]

[sub_resource type="VisualShaderNodeVectorCompose" id=16]

[sub_resource type="VisualShaderNodeScalarOp" id=17]
operator = 2

[sub_resource type="VisualShader" id=18]
code = "shader_type spatial;
render_mode specular_schlick_ggx, depth_test_disable;




void vertex() {
// Output:0

}

void fragment() {
// Input:6
	vec3 n_out6p0 = COLOR.rgb;

// VectorDecompose:7
	float n_out7p0 = n_out6p0.x;
	float n_out7p1 = n_out6p0.y;
	float n_out7p2 = n_out6p0.z;

// Input:5
	vec3 n_out5p0 = VERTEX;

// ScalarOp:9
	float n_out9p0 = n_out7p0 * dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarOp:10
	float n_out10p0 = n_out7p1 * dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarOp:11
	float n_out11p0 = n_out7p2 * dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333));

// VectorCompose:8
	vec3 n_out8p0 = vec3(n_out9p0, n_out10p0, n_out11p0);

// VectorOp:12
	vec3 n_out12p0 = n_out8p0 * n_out5p0;

// Input:13
	float n_out13p0 = TIME;

// ScalarFunc:14
	float n_out14p0 = sin(n_out13p0);

// ScalarOp:16
	float n_in16p1 = 0.20000;
	float n_out16p0 = n_out14p0 * n_in16p1;

// VectorOp:15
	vec3 n_out15p0 = n_out12p0 + vec3(n_out16p0);

// ScalarOp:17
	float n_in17p1 = 1.00000;
	float n_out17p0 = n_out14p0 + n_in17p1;

// Output:0
	ALBEDO = n_out15p0;
	ALPHA = n_out17p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 373, 69 )
flags/depth_test_disable = true
nodes/fragment/0/position = Vector2( 1160, 100 )
nodes/fragment/5/node = SubResource( 13 )
nodes/fragment/5/position = Vector2( -720, 360 )
nodes/fragment/6/node = SubResource( 14 )
nodes/fragment/6/position = Vector2( -520, 120 )
nodes/fragment/7/node = SubResource( 15 )
nodes/fragment/7/position = Vector2( -320, 80 )
nodes/fragment/8/node = SubResource( 16 )
nodes/fragment/8/position = Vector2( 180, 80 )
nodes/fragment/9/node = SubResource( 17 )
nodes/fragment/9/position = Vector2( -20, 60 )
nodes/fragment/10/node = SubResource( 5 )
nodes/fragment/10/position = Vector2( -360, 320 )
nodes/fragment/11/node = SubResource( 6 )
nodes/fragment/11/position = Vector2( -160, 240 )
nodes/fragment/12/node = SubResource( 7 )
nodes/fragment/12/position = Vector2( 400, 120 )
nodes/fragment/13/node = SubResource( 8 )
nodes/fragment/13/position = Vector2( 160, 360 )
nodes/fragment/14/node = SubResource( 9 )
nodes/fragment/14/position = Vector2( 320, 360 )
nodes/fragment/15/node = SubResource( 10 )
nodes/fragment/15/position = Vector2( 600, 220 )
nodes/fragment/16/node = SubResource( 11 )
nodes/fragment/16/position = Vector2( 520, 360 )
nodes/fragment/17/node = SubResource( 12 )
nodes/fragment/17/position = Vector2( 720, 380 )
nodes/fragment/connections = PoolIntArray( 6, 0, 7, 0, 7, 0, 9, 0, 9, 0, 8, 0, 7, 1, 10, 0, 5, 0, 10, 1, 10, 0, 8, 1, 5, 0, 9, 1, 5, 0, 11, 1, 11, 0, 8, 2, 8, 0, 12, 0, 5, 0, 12, 1, 13, 0, 14, 0, 7, 2, 11, 0, 12, 0, 15, 0, 14, 0, 16, 0, 16, 0, 15, 1, 14, 0, 17, 0, 15, 0, 0, 0, 17, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=19]
next_pass = SubResource( 4 )
shader = SubResource( 18 )

[node name="Hat3" type="RigidBody"]
script = ExtResource( 2 )
ContextOptions = [ 0, 1 ]
icon = "res://Sprites/Items/hats/TheSportsnap.png"
itemName = "The Hyperion"
value = 45.0

[node name="Interactable" parent="." instance=ExtResource( 1 )]
playSoundOnInteract = false
prompt = "Take Hat"

[node name="CollisionShape2" type="CollisionShape" parent="Interactable"]
transform = Transform( 0.359655, 0, 0, 0, 0.359655, 0, 0, 0, 0.359655, 0, 0.372148, 0 )
shape = SubResource( 1 )

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 0.359655, 0, 0, 0, 0.359655, 0, 0, 0, 0.359655, 0, 0.06696, 0 )
shape = SubResource( 2 )

[node name="Description" parent="." instance=ExtResource( 4 )]
description = "The ultimate in sports memorabilia. A hat worn by Hoops McD."

[node name="hat3" parent="." instance=ExtResource( 3 )]
transform = Transform( 0.287825, 0, 0, 0, 0.287825, 0, 0, 0, 0.287825, 0, 0, -0.0523492 )

[node name="letter_H" type="MeshInstance" parent="hat3"]
transform = Transform( 0.48779, 0, 0, 0, 0.126249, 0.471169, 0, -0.471169, 0.126249, 0, 0.373409, -0.838129 )
mesh = ExtResource( 5 )
material/0 = SubResource( 19 )
[connection signal="interaction" from="Interactable" to="." method="_on_Interactable_interaction"]

[editable path="Interactable"]
